1.Crea carpetas para cada instancia
mkdir instancia1
mkdir instancia2
mkdir instancia3

2.Ejecuta tres instancias de MongoDB Inicia cada instancia con un puerto diferente
mongod --port 27017 --dbpath C:/Users/Sergio/Desktop/torneo_deportivo_mongodb/instancia1 --replSet miReplicaSet --bind_ip localhost --logpath C:/Users/Sergio/Desktop/torneo_deportivo_mongodb/instancia1/mongo.log

mongod --port 27018 --dbpath C:/Users/Sergio/Desktop/torneo_deportivo_mongodb/instancia2 --replSet miReplicaSet --bind_ip localhost --logpath C:/Users/Sergio/Desktop/torneo_deportivo_mongodb/instancia2/mongo.log

mongod --port 27019 --dbpath C:/Users/Sergio/Desktop/torneo_deportivo_mongodb/instancia3 --replSet miReplicaSet --bind_ip localhost --logpath C:/Users/Sergio/Desktop/torneo_deportivo_mongodb/instancia3/mongo.log

3.Conectarnos  a uno de los nodos
mongosh --port 27017

4.Inicia el Replica Set:
rs.initiate({
    _id: "miReplicaSet",
    members: [        { _id: 0, host: "localhost:27017" },        { _id: 1, host: "localhost:27018" },        { _id: 2, host: "localhost:27019" }    ]
});

5.Verifica el estado del Replica Set
rs.status()

6. Probar el Replica Set
Inserta datos en el PRIMARY

db.tabla_clasificacion.insertMany([ { team: "Barcelona", points: 14, games_played: 6, wins: 4, draws: 2, losses: 0 }, { team: "Tottenham", points: 8, games_played: 6, wins: 2, draws: 2, losses: 2 }, { team: "Liverpool", points: 9, games_played: 6, wins: 3, draws: 0, losses: 3 }, { team: "Juventus", points: 12, games_played: 6, wins: 4, draws: 0, losses: 2 }, { team: "Real Madrid", points: 12, games_played: 6, wins: 4, draws: 0, losses: 2 }, { team: "Ajax", points: 12, games_played: 6, wins: 3, draws: 3, losses: 0 }, { team: "Manchester City", points: 13, games_played: 6, wins: 4, draws: 1, losses: 1 }, { team: "Bayern Munich", points: 14, games_played: 6, wins: 4, draws: 2, losses: 0 }, { team: "Paris Saint-Germain", points: 11, games_played: 6, wins: 3, draws: 2, losses: 1 }, {
 team: "Atletico Madrid", points: 13, games_played: 6, wins: 4, draws: 1, losses: 1 }] );

7. Verificar que los datos se replican en los secundarios: Con√©ctarnos a uno de los nodos SECONDARY
mongosh --port 27018
rs.slaveOk
db.miColeccion.find()

